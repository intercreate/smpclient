name: Release

env:
  name: smpclient

on:
  release:
    types: [published]

jobs:
  build:
    name: Build distribution 📦
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          cache: "poetry"

      - run: pipx inject poetry poetry-dynamic-versioning

      - run: poetry install

      - run: poetry build

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish-to-pypi:
    name: Publish Python 🐍 distribution 📦 to PyPI
    needs:
      - build

    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/${{ env.name }}
    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution 📦 to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: >-
      Sign the Python 🐍 distribution 📦 with Sigstore
      and upload them to GitHub Release
    needs:
      - publish-to-pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write # IMPORTANT: mandatory for making GitHub Releases
      id-token: write # IMPORTANT: mandatory for sigstore

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl

  publish-docs:
    name: Publish documentation 📚 to GitHub Pages
    needs:
      - github-release
    runs-on: ubuntu-latest

    permissions:
      contents: write # IMPORTANT: mandatory for deploying to GitHub Pages

    steps:
      - uses: actions/checkout@v4

      - run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          cache: "poetry"

      - run: poetry install --only doc

      - name: Configure git for gh-pages
        run: |
          git config --global user.name "SMP Docs Bot"
          git config --global user.email "docs@dummy.bot.com"

      - name: Set release version
        run: echo "GIT_TAG=${{ github.event.release.tag_name }}" >> $GITHUB_ENV

      - name: Build and deploy documentation
        run: |
          poetry run python docs/_generate_requests_docstrings.py
          poetry run mike deploy --push --update-aliases ${GIT_TAG} latest
